version: 2.1
jobs:
  build_test:
    machine:
      image: ubuntu-2004:current
    resource_class: large
    steps:
      - checkout
      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}
      #       - v1-dependencies-
      - run:
          name: Install Java 17
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-17-jdk
      - run:
          name: Set Java 17 as default
          command: sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
      - run:
          name: Print Node Version
          command: 'node -v'
      - run:
          name: Print NPM Version
          command: 'npm -v'
      - run:
          name: Install Node Modules
          command: 'npm install'
      - save_cache:
          paths:
            - node
            - node_modules
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "package-lock.json" }}

      - run:
          name: Give Executable Power
          command: 'chmod +x mvnw'
      - run:
          name: Backend tests
          command: |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
            npm run ci:backend:test
      - run:
          name: Run Front End Tests
          command: npm run ci:frontend:test
      # - run:
      #     name: 'E2E: Package'
      #     command: npm run ci:e2e:package
      # - run:
      #     name: 'E2E: Prepare'
      #     command: npm run ci:e2e:prepare
      # - run:
      #     name: 'E2E: Run'
      #     command: npm run ci:e2e:run
      #     environment:
      #       CYPRESS_ENABLE_RECORD: false
      # - run:
      #     name: 'E2E: Teardown'
      #     command: npm run ci:e2e:teardown
  deliver:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - run:
          name: Install Java 17
          command: |
            sudo apt-get update && sudo apt-get install -y openjdk-17-jdk
      - run: 
          name: Generate JAR
          command: |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
            npm run java:jar:prod
      - persist_to_workspace:
          root: .
          paths:
            - target/proybaseangmvn-3-0.0.1-SNAPSHOT.jar
      - store_artifacts:
          path: target/proybaseangmvn-3-0.0.1-SNAPSHOT.jar

  deploy:
    environment:
      AZURE_CLIENT_ID: 7eecbc41-597f-48fc-9ddf-76f43f819d05
      AZURE_CLIENT_SECRET: OlO8Q~Xm3AFupexm8mkIC1C5s_omzpM.oXbP7drr
      AZURE_TENANT_ID: 642abfe9-8349-406e-a44c-45336e1e0e3c
    docker:
      - image: "mcr.microsoft.com/azure-cli"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Authenticate with Azure
          command: |
            az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
      - run:
          name: Deploy to Azure
          command: |
            az webapp deploy --resource-group proybase --name proybaseappserv --src-path $(find . -name "proy*.jar") --type jar --verbose

workflows:
  version: 2
  sample:
    jobs:
      - build_test:
            filters:
                branches:
                    only:
                        - feature/circleci
      - deliver:
          filters:
              branches:
                  only:
                      - feature/circleci
      - deploy:
          requires:
              - deliver
          filters:
              branches:
                  only:
                      - feature/circleci